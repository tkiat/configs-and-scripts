2nix() {
  common() {
    local -n arr="$1" # pass by name
    for key in ${!arr[@]}; do
      if [ "$2" == "$key" ] ; then
        eval ${arr[${key}]}
        return 0
      fi
    done
    echo unknown arguments
    return 1
  }

  arg1="$1"
  arg2="$2"

# animals=(dog cat mouse)
# declare -A sound=(
#   [dog]=barks
#   [cat]=purrs
#   [mouse]=cheeps
# )
# declare -A size=(
#   [dog]=big
#   [cat]=medium
#   [mouse]=small
# )
# for animal in "${animals[@]}"; do
#   echo "$animal ${sound[$animal]} and it is ${size[$animal]}"
# done
#   aa=(user 'echo user')
#   test=(('a' 'b') ('c' 'd'))
#   for a in "${test[@]}"; do
#     echo "${a[0]} ${a[1]}"
# #     echo "$animal ${test[$animal]}"
#   done
#   for i in c,'echo noob' e,5; do IFS=","; set -- $i; echo $1 and $2; done
#   printarr() { declare -n __p="$1"; for k in "${!__p[@]}"; do printf "%s=%s\n" "$k" "${__p[$k]}" ; done ;  }

  declare -A i
  i[user]='echo user'
  i[root]='echo root'
#   i[user]='sudo -i -- nix-env -i $2'
#   i[root]='nix-env -i $2 && rm -f ~/.cache/dmenu_run'

  declare -A top
  top[i]='common i "$arg2"'
  top[q]='common i "$arg2"'

  common top $1

  printarr top
  printarr i
}

alias 2nix-c-pkgs="
  nix-env -f '<nixpkgs>' -qaP                    > ~/.cache/nixpkgs
  nix-env -f '<nixpkgs>' -qaP -A haskellPackages > ~/.cache/nixpkgs-haskell
  nix-env -f '<nixpkgs>' -qaP -A nodePackages    > ~/.cache/nixpkgs-node
"
alias 2nix-gc='2nix-gc-user;2nix-gc-root;2nix-gc-system'
alias 2nix-gc-user='nix-env --delete-generations old && nix-store --gc'
alias 2nix-gc-root='sudo -i -- nix-env --delete-generations old && nix-store --gc'
alias 2nix-gc-system='
        sudo nix-env -p /nix/var/nix/profiles/system --delete-generations old &&
        nix-collect-garbage -d
      '
      2nix-i() { nix-env -i $1 && rm -f ~/.cache/dmenu_run; }
      2nix-i-hint () {
cat << EOF
On NixOS
  - Haskell: nix-env -iA nixos.haskellPackages.<package-name>
EOF
}
alias 2nix-i-root='sudo -i -- nix-env -i'
alias 2nix-q-generations-system='sudo nix-env --list-generations --profile /nix/var/nix/profiles/system'
alias 2nix-q-info="nix-shell -p nix-info --run 'nix-info -m'"
alias 2nix-q-installed='nix-env --query'
alias 2nix-q-installed-root='sudo -i -- nix-env --query'
alias 2nix-q-pkgs='cat ~/.cache/nixpkgs'
alias 2nix-q-pkgs-haskell='cat ~/.cache/nixpkgs-haskell'
alias 2nix-q-pkgs-node='cat ~/.cache/nixpkgs-node'
alias 2nix-r='nix-env -e'
alias 2nix-r-root='sudo -i -- nix-env -e'
# 2nix-s-pkg() { nix-env -qa | grep $1 | bat; }
alias 2nix-u='nix-channel --update && nix-env -u'
alias 2nix-u-root='sudo -i -- nix-channel --update && nix-env -u'
alias 2nix-u-self='nix-channel --update; nix-env -iA nixpkgs.nix'
alias 2nix-u-self-root='sudo -i -- nix-channel --update && nix-env -iA nixpkgs.nix'
