      print-and-execute() { cmd=$1; echo "Evaluating: $cmd"; echo; eval "$cmd";}

      2nix-c(){
        print-and-execute "nix-env -f '<nixpkgs>' -qaP -A haskellPackages > ~/.cache/nixpkgs-haskell"
        print-and-execute "nix-env -f '<nixpkgs>' -qaP > ~/.cache/nixpkgs"
        print-and-execute "nix-env -f '<nixpkgs>' -qaP -A nodePackages > ~/.cache/nixpkgs-node"
      }
alias 2nix-gc='2nix-gc-root && 2nix-gc-system && 2nix-gc-user'
alias 2nix-gc-root="sudo -i -- nix-env --delete-generations old && nix-store --gc"
alias 2nix-gc-system="sudo nix-env -p /nix/var/nix/profiles/system --delete-generations old && nix-collect-garbage -d"
alias 2nix-gc-user="nix-env --delete-generations old && nix-store --gc"
alias 2nix-q-haskell='cat ~/.cache/nixpkgs-haskell | 2less'
alias 2nix-q-nixpkgs='cat ~/.cache/nixpkgs | 2less'
alias 2nix-q-node='cat ~/.cache/nixpkgs-node | 2less'
alias 2nix-q-root-installed="print-and-execute 'sudo -i -- nix-env --query'"
alias 2nix-q-system-generation="print-and-execute 'sudo nix-env --list-generations --profile /nix/var/nix/profiles/system'"
alias 2nix-q-system-info="print-and-execute \"nix-shell -p nix-info --run 'nix-info -m'\""
alias 2nix-q-user-installed="print-and-execute 'nix-env --query'"
alias 2nix-i-root-nixpkgs="sudo -i -- nix-env -i $3"
alias 2nix-i-user-nixpkgs="nix-env -i"
      2nix-i-user-haskell() {
        print-and-execute "nix-env -iA nixos.haskellPackages.$1"
      }
alias 2nix-r-root="sudo -i -- nix-env -e"
alias 2nix-r-user="nix-env -e"
alias 2nix-u-channel="nix-channel --update"
alias 2nix-u-channel-sudo="sudo nix-channel --update"
# alias 2nix-u-nix-root="sudo -i -- nix-channel --update && nix-env -iA nixpkgs.nix",
alias 2nix-u-nix="nix-env -iA nixpkgs.nix"
alias 2nix-u-root="sudo -i -- nix-channel --update && nix-env -u"
alias 2nix-u-single_user="nix-channel --update; nix-env -iA nixpkgs.nix nixpkgs.cacert; nix-env -u"
